"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserTypeDefs = void 0;
var apollo_server_express_1 = require("apollo-server-express");
var UserTypeDefs = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    scalar Upload\n    type User{\n        id: ID,\n        username: String,\n        email: String,\n        admin: Boolean,\n        confirmed: Boolean,\n        pictureUrl: String\n        # password: String!\n    }\n    type AuthPayload{\n        user: User,\n        refreshToken: String\n    }\n    extend type Query {\n        getUser(id: ID!): User,\n        isLoggedIn(accessToken: String,ip: String): User,\n        isValidForgotPasswordToken(forgotPasswordToken: String): Boolean,\n    }\n    extend type Mutation {\n        register(username: String, email: String, password: String): Boolean,\n        login(email: String, password: String): AuthPayload,\n        confirmUser(token: String): Boolean,\n        forgotPassword(email: String): Boolean,\n        resetPassword(token: String,newPassword: String): Boolean,\n        logout: Boolean,\n        logoutAll: Boolean,\n        updateUserInfo(\n            refreshToken: String\n            username: String,\n            password: String,\n            file: Upload\n        ): User,\n        \n        \n    } \n\n"], ["\n    scalar Upload\n    type User{\n        id: ID,\n        username: String,\n        email: String,\n        admin: Boolean,\n        confirmed: Boolean,\n        pictureUrl: String\n        # password: String!\n    }\n    type AuthPayload{\n        user: User,\n        refreshToken: String\n    }\n    extend type Query {\n        getUser(id: ID!): User,\n        isLoggedIn(accessToken: String,ip: String): User,\n        isValidForgotPasswordToken(forgotPasswordToken: String): Boolean,\n    }\n    extend type Mutation {\n        register(username: String, email: String, password: String): Boolean,\n        login(email: String, password: String): AuthPayload,\n        confirmUser(token: String): Boolean,\n        forgotPassword(email: String): Boolean,\n        resetPassword(token: String,newPassword: String): Boolean,\n        logout: Boolean,\n        logoutAll: Boolean,\n        updateUserInfo(\n            refreshToken: String\n            username: String,\n            password: String,\n            file: Upload\n        ): User,\n        \n        \n    } \n\n"])));
exports.UserTypeDefs = UserTypeDefs;
var templateObject_1;
